
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Helper Functions ---
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isUser(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuthenticated() && get(/databases/$(database)/documents/admin_users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isModerator() {
      return isAuthenticated() && get(/databases/$(database)/documents/admin_users/$(request.auth.uid)).data.role == 'moderator';
    }
    
    function isAdminOrModerator() {
      return isAdmin() || isModerator();
    }
    
    function isCircleMember(circleId) {
      return isAuthenticated() && exists(/databases/$(database)/documents/CircleMembers/$(circleId)_$(request.auth.uid));
    }
    
    function isCircleAdmin(circleId) {
      return isAuthenticated() && get(/databases/$(database)/documents/CircleMembers/$(circleId)_$(request.auth.uid)).data.role == 'Admin';
    }
    
    function isCircleAdminOrInfluencer(circleId) {
      return isCircleAdmin(circleId) || (isAuthenticated() && get(/databases/$(database)/documents/CircleMembers/$(circleId)_$(request.auth.uid)).data.role == 'Influencer');
    }

    // --- Collection Rules ---

    // Users can read any profile (for circle member lists), but can only create/update their own. Admins can update/delete any.
    match /Users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isUser(userId);
      allow update: if isUser(userId) || isAdmin();
      allow delete: if isAdmin();
    }

    // Only admins can view or change admin/moderator roles.
    match /admin_users/{userId} {
      allow read, write: if isAdmin();
    }

    // Logged-in users can read puzzles. Only admins can create/edit them.
    match /DailyPuzzles/{puzzleId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Words can be read by any logged-in user. Updates can be done by their owner (for transfers) or admins.
    match /Words/{wordId} {
      allow read: if isAuthenticated();
      allow create: if isAdminOrModerator();
      allow update: if isAdminOrModerator() || isUser(resource.data.originalSubmitterUID);
      allow delete: if isAdminOrModerator(); // For tidying up
    }

    // Rejected words list is only accessible by admins/mods.
    match /RejectedWords/{wordId} {
      allow read, write: if isAdminOrModerator();
    }

    // Users can create their own word submissions. Admins/mods manage the queue.
    match /WordSubmissionsQueue/{submissionId} {
      allow create: if isUser(request.resource.data.submittedByUID);
      allow read, delete: if isAdminOrModerator();
    }

    // Circles can be read by any logged-in user (for public discovery). Management is restricted.
    match /Circles/{circleId} {
      allow read: if isAuthenticated();
      allow create: if isUser(request.resource.data.creatorUserID);
      allow update: if isCircleAdmin(circleId) || isAdmin();
      allow delete: if isCircleAdmin(circleId) || isAdmin();
    }

    // *** CORRECTED RULE ***
    // Members of a circle can read other member data. Admins of circle can manage members.
    match /CircleMembers/{memberId} {
      allow read: if isCircleMember(resource.data.circleId) || isAdminOrModerator();
      allow create: if isUser(request.resource.data.userId); // Server actions will verify invite/code
      allow update: if isCircleAdmin(resource.data.circleId) || isAdmin();
      allow delete: if isUser(resource.data.userId) || isCircleAdmin(resource.data.circleId) || isAdmin();
    }

    // Invites can be managed by the inviter, invitee, circle admin, or system admin.
    match /CircleInvites/{inviteId} {
      allow read, write, delete: if isAuthenticated() && (
                                     isUser(request.resource.data.inviterUserId) || 
                                     isUser(request.resource.data.inviteeUserId) ||
                                     isCircleAdmin(request.resource.data.circleId) ||
                                     isAdminOrModerator()
                                   );
      allow create: if isAuthenticated();
    }

    // *** CORRECTED RULE ***
    // Scores can be read by circle members. Writes happen via authenticated server actions.
    match /CircleDailyScores/{scoreId} {
      allow read: if isCircleMember(resource.data.circleId) || isAdminOrModerator();
      allow write: if isAuthenticated();
    }
    match /CircleWeeklyScores/{scoreId} {
      allow read: if isCircleMember(resource.data.circleId) || isAdminOrModerator();
      allow write: if isAuthenticated();
    }
    match /CircleMonthlyScores/{scoreId} {
      allow read: if isCircleMember(resource.data.circleId) || isAdminOrModerator();
      allow write: if isAuthenticated();
    }

    // Suggestions can be created by anyone, but only managed by admins/mods.
    match /UserSuggestions/{suggestionId} {
      allow create: if true;
      allow read, write: if isAdminOrModerator();
    }
    
    // Changelog is public to read, admin-only to write.
    match /ChangelogEntries/{entryId} {
        allow read: if true;
        allow write: if isAdmin();
    }

    // Notifications can be created by authenticated users (via server actions) and can only be read/updated by the recipient.
    match /Notifications/{notificationId} {
      allow read, update: if isUser(resource.data.userId);
      allow create: if isAuthenticated();
    }

    // Word Transfers can be created by the sender, and updated by sender (cancel) or recipient (respond).
    match /WordTransfers/{transferId} {
      allow read: if isAuthenticated() && (isUser(resource.data.senderUserId) || isUser(resource.data.recipientUserId));
      allow create: if isUser(request.resource.data.senderUserId);
      allow update: if isUser(request.resource.data.recipientUserId) || isUser(resource.data.senderUserId);
    }
    
    // System config is admin-only.
    match /SystemConfiguration/{docId} {
      allow read, write: if isAdmin();
    }
    
    // Audit logs are admin/mod-only.
    match /AdminAuditLogs/{logId} {
        allow create, read: if isAdminOrModerator();
    }
    
    // Creating mail documents is allowed for any authenticated user (server actions do the specific permission checks).
    match /mail/{docId} {
        allow create: if isAuthenticated();
    }
  }
}
